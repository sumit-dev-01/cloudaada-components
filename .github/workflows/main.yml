name: Deploy JSON Files to MongoDB

on:
  push:
    branches:
      - cloudadda
    paths:
      - 'for_ci_cd/**/*.json'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install MongoDB Node.js Driver
        run: npm install mongodb

      - name: Upload JSON files to MongoDB
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          CONNECT_GITHUB: ${{ secrets.CONNECT_GITHUB }}
        run: |
          node <<EOF
          const fs = require('fs');
          const path = require('path');
          const { MongoClient } = require('mongodb');

          const uri = process.env.MONGODB_URI;
          const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });

          async function run() {
            try {
              await client.connect();
              const database = client.db('cloudaddaDB'); // Replace with your database name
              const collection = database.collection('components'); // Replace with your collection name

              const folderPath = 'for_ci_cd';
              const jsonFiles = [];

              function readJsonFiles(dir) {
                const files = fs.readdirSync(dir);
                files.forEach(file => {
                  const filePath = path.join(dir, file);
                  const stat = fs.statSync(filePath);
                  if (stat.isDirectory()) {
                    readJsonFiles(filePath);
                  } else if (file.endsWith('.json')) {
                    jsonFiles.push(filePath);
                  }
                });
              }

              readJsonFiles(folderPath);

              for (const file of jsonFiles) {
                const data = JSON.parse(fs.readFileSync(file, 'utf8'));
                await collection.insertOne(data);
                console.log(`Uploaded ${file} to MongoDB`);
              }
            } finally {
              await client.close();
            }
          }

          run().catch(console.dir);
          EOF
